
#DB properties:
db.driver=com.mysql.jdbc.Driver
db.url=jdbc:mysql://localhost:3306/testdb?useUnicode=true&characterEncoding=utf-8
db.username=root
db.password=root

#Hibernate Configuration:
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql=true
packages.to.scan=com.models
hibernate.hbm2ddl.auto = update
## DataSource settings: set here your own configurations for the database
## connection. In this example we have "netgloo_blog" as database name and
## "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/testdb
#spring.datasource.username = root
#spring.datasource.password = root
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## Show or not log for each sql query
#spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager)
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#
#db.driver=com.mysql.jdbc.Driver
#package.to.scan=com